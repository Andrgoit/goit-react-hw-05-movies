{"version":3,"file":"static/js/544.d4c2fdbf.chunk.js","mappings":"gNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yHACR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IAEL,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,KAAnB,IAOCC,EAAcR,EAAAA,GAAAA,EAAH,+EACT,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,UAAUK,CAAtB,IACC,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,OAAxB,IACP,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,OAAOM,GAAnB,I,SCbG,SAASC,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,OAAwB,IAAhBC,MAAAA,OAAgB,MAAR,KAAQ,EAC1D,OACE,gCACGA,IAAS,SAACP,EAAD,UAAcO,KACxB,wBACGD,EAAOE,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACjB,OACE,yBACE,SAACnB,EAAD,CAAYoB,GAAE,kBAAaF,GAA3B,SAAkCC,KAD3BD,EAIZ,QAIR,CAEDJ,EAAUO,aAAe,CACvBN,OAAQ,G,8LCpBJO,EAAU,mCAEHC,EAAa,mCAAG,+GAEFC,EAAAA,GAAAA,IAAA,kEACsCF,IAHpC,uBAEjBG,EAFiB,EAEjBA,KAFiB,kBAMlBA,EAAKC,SANa,gCAQzBC,QAAQC,MAAR,MARyB,yDAAH,qDAyBbC,EAAY,mCAAG,WAAMX,GAAN,kGAEDM,EAAAA,GAAAA,IAAA,6CACiBN,EADjB,oBAC+BI,EAD/B,oBAFC,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBE,QAAQC,MAAR,MARwB,yDAAH,sDAaZE,EAAgB,mCAAG,WAAMC,GAAN,kGAELP,EAAAA,GAAAA,IAAA,4DACgCF,EADhC,kBACiDS,EADjD,yBAFK,uBAEpBN,EAFoB,EAEpBA,KAFoB,kBAMrBA,EAAKC,SANgB,gCAQ5BC,QAAQC,MAAR,MAR4B,yDAAH,sDAahBI,EAAO,mCAAG,WAAMd,GAAN,kGAEIM,EAAAA,GAAAA,IAAA,6CACiBN,EADjB,qEAFJ,uBAEXO,EAFW,EAEXA,KAFW,kBAMZA,EAAKQ,MANO,gCAQnBN,QAAQC,MAAR,MARmB,yDAAH,sDAcPM,EAAU,mCAAG,WAAMhB,GAAN,kGAECM,EAAAA,GAAAA,IAAA,6CACiBN,EADjB,qEAFD,uBAEdO,EAFc,EAEdA,KAFc,kBAMfA,EAAKC,SANU,gCAQtBC,QAAQC,MAAR,MARsB,yDAAH,qD,+IC/DR,SAASO,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAECjB,EAAAA,EAAAA,MAFD,OAEdkB,EAFc,OAGpBH,EAAcG,GAHM,gDAKpBd,QAAQe,IAAR,MALoB,yDAAH,qDAQrBF,GACD,GAAE,KAGD,0BACE,SAAC,IAAD,CAAWzB,OAAQsB,EAAYrB,MAAM,qBAG1C,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/utils/api-request.js","pages/Home/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  font-size: ${p => p.theme.fontSizes.s};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const StyledTitle = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.preBold};\n  color: ${p => p.theme.colors.red};\n`;\n","import React from 'react';\nimport { StyledLink, StyledTitle } from './MovieList.styled';\n\nexport default function MovieList({ movies, title = null }) {\n  return (\n    <>\n      {title && <StyledTitle>{title}</StyledTitle>}\n      <ol>\n        {movies.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <StyledLink to={`/movies/${id}`}>{original_title}</StyledLink>\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n}\n\nMovieList.defaultProps = {\n  movies: [],\n};\n","import axios from 'axios';\nconst API_KEY = '83cba2c85d0df477852b094af9fbdddb';\n\nexport const TrendingMovie = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetGenre = async () => {\n  try {\n    const { genres } = await axios.get(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n    );\n\n    return genres;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// https://api.themoviedb.org/3/genre/movie/list?api_key=83cba2c85d0df477852b094af9fbdddb\n\nexport const GetMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// https://api.themoviedb.org/3/movie/766220?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US\n\nexport const GetMovieBySearch = async q => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${q}&include_adult=false`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// https://api.themoviedb.org/3/search/movie?api_key=83cba2c85d0df477852b094af9fbdddb&query=cat&page=1&include_adult=false\n\nexport const GetCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US`\n    );\n\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// https://api.themoviedb.org/3/movie/361743/credits?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US\n\nexport const GetReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// https://api.themoviedb.org/3/movie/361743/reviews?api_key=83cba2c85d0df477852b094af9fbdddb&language=en-US\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { TrendingMovie } from 'components/utils/api-request';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function Home() {\n  const [trendMovie, setTrendMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendMovie = async () => {\n      try {\n        const result = await TrendingMovie();\n        setTrendMovie(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrendMovie();\n  }, []);\n\n  return (\n    <div>\n      <MovieList movies={trendMovie} title=\"Trending movie:\" />\n    </div>\n  );\n}\n"],"names":["StyledLink","styled","Link","p","theme","fontSizes","s","colors","black","StyledTitle","l","fontWeights","preBold","red","MovieList","movies","title","map","id","original_title","to","defaultProps","API_KEY","TrendingMovie","axios","data","results","console","error","GetMovieById","GetMovieBySearch","q","GetCast","cast","GetReviews","Home","useState","trendMovie","setTrendMovie","useEffect","fetchTrendMovie","result","log"],"sourceRoot":""}